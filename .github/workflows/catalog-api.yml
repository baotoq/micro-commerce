name: catalog-api

on:
  workflow_dispatch:
  push:
    branches: [ master, develop, feature/** ]
    paths:
    - src/Services/Catalog/**
    - deploy/k8s/catalog-api
    - pipeline/azure/catalog-api
    - .github/workflows/catalog-api.yml
  pull_request:
    branches: [ master, develop ]
  release:
    types: [ published ]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

  DOTNET_VERSION: 5.0.100
  CONFIGURATION: Release

  PROJECT_LOCATION: ./src/Services/Catalog/MicroCommerce.Catalog.API

jobs:
  build:
    name: Build and run unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{env.PROJECT_LOCATION}}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{env.DOTNET_VERSION}}

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore -c ${{env.CONFIGURATION}}

    - name: Run Tests
      run: dotnet test -c ${{env.CONFIGURATION}} /p:CollectCoverage=true
      working-directory: ${{env.PROJECT_LOCATION}}.Tests

  push_image:
    name: Build and push image to registry
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        driver-opts: network=host
    - name: Login to DockerHub
      uses: docker/login-action@v1 

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./src
        push: true
        file: ${{env.PROJECT_LOCATION}}/Dockerfile
        tags: localhost:5000/name/app:latest

    - name: Inspect
      run: |
          docker buildx imagetools inspect localhost:5000/name/app:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

