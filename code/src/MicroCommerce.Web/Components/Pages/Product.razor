@page "/products"
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@inject ProductApiClient ProductApi

<PageTitle>Product</PageTitle>

<h1>Product</h1>

<p>This component demonstrates showing data loaded from a backend API service.</p>

@if (_products == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var product in _products)
        {
            <tr>
                <td>@product.Id</td>
                <td>@product.Name</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private Web.Product[]? _products;

    protected override async Task OnInitializedAsync()
    {
        _products = await ProductApi.GetProductsAsync();
    }

}
