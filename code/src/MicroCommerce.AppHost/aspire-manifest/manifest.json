{
  "resources": {
    "postgres": {
      "type": "container.v0",
      "connectionString": "Host={postgres.bindings.tcp.host};Port={postgres.bindings.tcp.port};Username=postgres;Password={postgrespassword.value}",
      "image": "docker.io/library/postgres:16.2",
      "volumes": [
        {
          "name": "MicroCommerce.AppHost-postgres-data",
          "target": "/var/lib/postgresql/data",
          "readOnly": false
        }
      ],
      "env": {
        "POSTGRES_HOST_AUTH_METHOD": "scram-sha-256",
        "POSTGRES_INITDB_ARGS": "--auth-host=scram-sha-256 --auth-local=scram-sha-256",
        "POSTGRES_USER": "postgres",
        "POSTGRES_PASSWORD": "{postgrespassword.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 5432
        }
      }
    },
    "database": {
      "type": "value.v0",
      "connectionString": "{postgres.connectionString};Database=database"
    },
    "redis": {
      "type": "container.v0",
      "connectionString": "{redis.bindings.tcp.host}:{redis.bindings.tcp.port}",
      "image": "docker.io/library/redis:7.2.4",
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 6379
        }
      }
    },
    "messaging": {
      "type": "container.v0",
      "connectionString": "amqp://guest:{messagingpassword.value}@{messaging.bindings.tcp.host}:{messaging.bindings.tcp.port}",
      "image": "docker.io/library/rabbitmq:3-management",
      "volumes": [
        {
          "name": "MicroCommerce.AppHost-messaging-data",
          "target": "/var/lib/rabbitmq",
          "readOnly": false
        }
      ],
      "env": {
        "RABBITMQ_DEFAULT_USER": "guest",
        "RABBITMQ_DEFAULT_PASS": "{messagingpassword.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 5672
        },
        "management": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 15672
        }
      }
    },
    "apiservice": {
      "type": "project.v0",
      "path": "../../MicroCommerce.ApiService/MicroCommerce.ApiService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "ConnectionStrings__database": "{database.connectionString}",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "ConnectionStrings__messaging": "{messaging.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "nextjsweb": {
      "type": "dockerfile.v0",
      "path": "../../MicroCommerce.NextjsWeb/Dockerfile",
      "context": "../../MicroCommerce.NextjsWeb",
      "env": {
        "NODE_ENV": "production",
        "BROWSER": "none",
        "NEXT_APP_API_HTTP": "{apiservice.bindings.http.url}",
        "PORT": "{nextjsweb.bindings.http.targetPort}",
        "services__apiservice__http__0": "{apiservice.bindings.http.url}",
        "services__apiservice__https__0": "{apiservice.bindings.https.url}",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "NEXT_APP_API_HTTPS": "{apiservice.bindings.https.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "port": 3000,
          "targetPort": 8000,
          "external": true
        }
      }
    },
    "postgrespassword": {
      "type": "parameter.v0",
      "value": "{postgrespassword.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    },
    "messagingpassword": {
      "type": "parameter.v0",
      "value": "{messagingpassword.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    }
  }
}