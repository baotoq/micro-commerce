version: '3.8'

services:
  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    restart: on-failure
    networks:
      - backend

  postgres:
    image: postgres:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: on-failure
    networks:
      - backend

  zipkin:
    image: openzipkin/zipkin:latest
    restart: on-failure
    networks:
      - backend

  seq:
    image: datalust/seq
    volumes:
      - seq-data:/data
    environment:
      - ACCEPT_EULA=Y
    restart: on-failure
    networks:
      - backend

  basket-api:
    image: ${DOCKER_REGISTRY-}microcommerce-basket-api
    build:
      context: .
      dockerfile: Services/Basket/MicroCommerce.Basket.API/Dockerfile
    restart: on-failure
    networks:
      - backend

  catalog-api:
    image: ${DOCKER_REGISTRY-}microcommerce-catalog-api
    build:
      context: .
      dockerfile: Services/Catalog/MicroCommerce.Catalog.API/Dockerfile
    restart: on-failure
    networks:
      - backend

  ordering-api:
    image: ${DOCKER_REGISTRY-}microcommerce-ordering-api
    build:
      context: .
      dockerfile: Services/Ordering/MicroCommerce.Ordering.API/Dockerfile
    restart: on-failure
    networks:
      - backend

  identity-api:
    image: ${DOCKER_REGISTRY-}microcommerce-identity-api
    build:
      context: .
      dockerfile: Services/Identity/MicroCommerce.Identity.API/Dockerfile
    restart: on-failure
    networks:
      - backend

volumes:
  postgres-data:
  redis-data:
  seq-data:

networks:
  frontend:
  backend: