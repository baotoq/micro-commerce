trigger:
  branches:
    include:
      - master
      - feature/*
    exclude:
      - ref/tags/*
  paths:
    include:
      - src
      - tests
      - pipeline

pool:
  vmImage: ubuntu-latest

variables:
  solution: '**/*.sln'
  buildPlatform: Any CPU
  buildConfiguration: Release

stages:
- stage: Build_and_Run_Tests
  jobs:
    - job: Build
      displayName: Build
      steps:
        - task: SonarQubePrepare@4
          displayName: Prepare analysis on SonarQube
          continueOnError: true
          inputs:
            SonarQube: sonar
            projectKey: bshop

        - task: DotNetCoreCLI@2
          displayName: Restore
          inputs:
            command: restore
            projects: $(solution)

        - task: DotNetCoreCLI@2
          displayName: Build
          inputs:
            command: build
            projects: $(solution)
            arguments: --no-restore

        - task: SonarQubeAnalyze@4
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
          continueOnError: true
          displayName: Run Code Analysis

    - job: Run_Tests
      displayName: Run tests
      dependsOn: Build
      condition: succeeded()
      steps:
        - task: DotNetCoreCLI@2
          displayName: Test
          inputs:
            command: test
            projects: $(solution)
            arguments: /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/coverage --logger trx
            nobuild: true
            publishTestResults: true
        
        - task: PublishCodeCoverageResults@1
          displayName: Publish code coverage report
          inputs:
            codeCoverageTool: Cobertura
            summaryFileLocation: $(Build.SourcesDirectory)/**/coverage.cobertura.xml
