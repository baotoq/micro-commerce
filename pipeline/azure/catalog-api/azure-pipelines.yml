trigger:
  branches:
    include:
      - master
    exclude:
      - ref/tags/*
  paths:
    include:
      - src/Services/Catalog
      - deploy/k8s/catalog-api
      - pipeline/azure/catalog-api
pr: none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: isDeploy
    displayName: Deploy?
    type: boolean
    default: false

variables:
  - name: serviceName
    value: catalog-api

stages:
  - stage: Build_and_Run_Tests
    displayName: Build and Run tests
    jobs:
      - job: Build
        displayName: Build
        steps:
          - template: ../build-test-sonar-scan.yml
            parameters:
              projectKey: $(serviceName)
              projectPath: Services/Catalog/MicroCommerce.Catalog.API

  - ${{ if eq(parameters.isDeploy, true) }}:
      - stage: Build_and_Push_Image
        displayName: Build and push docker image
        jobs:
          - job: Build_and_Push_Image
            displayName: Build and push docker image
            steps:
              - template: ../compose.yml
                parameters:
                  action: build
                  services: [$(serviceName)]
              - template: ../compose.yml
                parameters:
                  action: push
                  services: [$(serviceName)]

      - stage: Deploy
        displayName: Deploy
        dependsOn:
          - Build_and_Run_Tests
          - Build_and_Push_Image
        condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(parameters.isDeploy, 'true')))
        jobs:
          - deployment: app
            displayName: App deployment
            environment: dev
            strategy:
              runOnce:
                deploy:
                  steps:
                    - template: ../package-helm-chart.yml
                      parameters:
                        service: $(serviceName)

                    - template: ../install-helm-chart.yml
                      parameters:
                        service: $(serviceName)
                        namespace: micro-commerce
                        valueFile: deploy/k8s/$(serviceName)/values.yaml
                        arguments: -f deploy/k8s/$(serviceName)/values.azure.yaml
