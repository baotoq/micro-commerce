// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/dotnet
{
  "name": "C# (.NET)",
  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  "image": "mcr.microsoft.com/devcontainers/dotnet:1-8.0-bookworm",

  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/elanhasson/devcontainer-features/dotnet-aspire-daily:1": {},
    "ghcr.io/devcontainers/features/dotnet:2": {},
    "ghcr.io/devcontainers/features/common-utils:2": {},
    "ghcr.io/devcontainers/features/node:1": {},
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-dotnettools.csdevkit",
        "ms-dotnettools.vscodeintellicode-csharp",
        "ms-dotnettools.csharp",
        "ms-dotnettools.vscode-dotnet-runtime",
        "streetsidesoftware.code-spell-checker",
        "esbenp.prettier-vscode",
        "EditorConfig.EditorConfig"
      ]
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [17290, 17290],
  "portsAttributes": {
    "5001": {
      "label": "apiservice"
      //"protocol": "https"
    }
  },

  // 1. Export it locally using this command:
  //    * Windows PowerShell:
  //        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
  //    * macOS/Linux terminal:
  //        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
  //
  // 2. Uncomment these 'remoteEnv' lines:
  "remoteEnv": {
    "ASPNETCORE_Kestrel__Certificates__Default__Password": "P@ssword",
    "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx"
  },
  //
  // 3. Do one of the following depending on your scenario:
  //    * When using GitHub Codespaces and/or Remote - Containers:
  //      1. Start the container
  //      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
  //      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"
  //
  //    * If only using Remote - Containers with a local container, uncomment this line instead:
  "mounts": [
    "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind"
  ],

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "",

  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  "remoteUser": "root"
}
