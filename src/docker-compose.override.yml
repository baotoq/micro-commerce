version: '3.8'

services:
  redis:
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "P@ssw0rd"]
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data

  postgres:
    environment:
      - POSTGRES_MULTIPLE_DATABASES=catalog,identity
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=P@ssw0rd
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./create-database.sh:/docker-entrypoint-initdb.d/create-database.sh
    ports:
      - "${POSTGRES_PORT}:5432"

  flyway:
    entrypoint: []
    command:
      - bash
      - -c
      - |
        flyway -url=jdbc:postgresql://postgres:5432/catalog -locations=filesystem:/sql/catalog migrate
        flyway -url=jdbc:postgresql://postgres:5432/identity -locations=filesystem:/sql/identity migrate
    environment:
      - FLYWAY_USER=postgres
      - FLYWAY_PASSWORD=P@ssw0rd
      - FLYWAY_CONNECT_RETRIES=15
    volumes:
      - ./Services/Catalog/MicroCommerce.Catalog.API/Migrations/scripts:/sql/catalog
      - ./Services/Identity/MicroCommerce.Identity.API/Migrations/scripts:/sql/identity

  zipkin:
    ports:
      - "${ZIPKIN_PORT}:9411"

  seq:
    environment:
      - ACCEPT_EULA=Y
    volumes:
      - seq-data:/data
    ports:
      - "${SEQ_PORT}:80"

  prometheus:
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./monitoring:/etc/prometheus
      - prometheus-data:/prometheus

  grafana:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=P@ssw0rd
      - PROMETHEUS_URL=http://prometheus:9090
      - DASHBOARDS_BACKUP_FOLDER=/var/lib/grafana/dashboards
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboard-backup:/var/lib/grafana/dashboards

  alertmanager:
    ports:
      - "${ALERTMANAGER_PORT}:9093"
    volumes:
      - ./monitoring:/etc/alertmanager
      - alertmanager-data:/alertmanager

  mail:
    ports:
      - "37408:37408"
      - "25:25"

  basket-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
    ports:
      - "${BASKET_API_HTTP_PORT}:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

  catalog-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
    ports:
      - "${CATALOG_API_HTTP_PORT}:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

  ordering-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
    ports:
      - "${ORDERING_API_HTTP_PORT}:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

  identity-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80;https://0.0.0.0:443
    ports:
      - "${IDENTITY_API_HTTP_PORT}:80"
      - "${IDENTITY_API_HTTPS_PORT}:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ./certs:/root/.aspnet/https:ro

  ocelot-gateway-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Dapr
      - ASPNETCORE_URLS=http://0.0.0.0:80;https://0.0.0.0:443
    ports:
      - "${OCELOT_GATEWAY_API_HTTP_PORT}:80"
      - "${OCELOT_GATEWAY_API_HTTPS_PORT}:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ./certs:/root/.aspnet/https:ro

  healthchecks-web:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
    ports:
      - "${HEALTH_CHECKS_WEB_HTTP_PORT}:80"

volumes:
  postgres-data:
  redis-data:
  seq-data:
  alertmanager-data:
  prometheus-data:
